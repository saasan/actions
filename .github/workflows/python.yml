name: Python application

on:
  schedule:
    - cron: '3-59/10 * * * *'

permissions:
  contents: read

env:
  STATE_FILE: './appstate'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: IDの生成
        id: build-id
        run: echo "::set-output name=id::$(date +%s)"

      - uses: actions/cache@v3
        id: appstate
        with:
          path: ${{ env.STATE_FILE }}
          key: appstate-${{ steps.build-id.outputs.id }} # 毎回、最新のキャッシュを保存するためにIDを指定する
          restore-keys: appstate- # 復元時は最新のキャッシュを指定する

      - run: echo '${{ toJSON(steps.appstate.outputs) }}'
      - if: ${{ steps.appstate.outputs.cache-hit != 'true' }}
        run: echo '0' > ${{ env.STATE_FILE }}
      - run: cat ${{ env.STATE_FILE }}

      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # pip install feedparser pydantic tweepy
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Exce App
        run: |
          python main.py
